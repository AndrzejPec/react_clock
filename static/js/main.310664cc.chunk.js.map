{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","toUTCString","slice","hasClock","clockNameInterval","clockTimeInterval","hideClock","event","preventDefault","setState","showClock","stopUpdatingClockName","clearInterval","stopUpdatingClockTime","updateClockTime","newTime","document","addEventListener","this","startClockTimeUpdate","removeEventListener","setInterval","bind","name","props","className","randomNum","Math","floor","random","React","Component","App","clockName","updateClockName","newName","getRandomName","oldName","console","info","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,aAAa,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAClDC,UAAU,GAHd,EAMEC,kBAA2C,KAN7C,EAQEC,kBAA2C,KAR7C,EA4BEC,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKC,SAAS,CAAEN,UAAU,KA9B9B,EAiCEO,UAAY,WACV,EAAKD,SAAS,CAAEN,UAAU,KAlC9B,EAqCEQ,sBAAwB,WACS,OAA3B,EAAKP,mBACPQ,cAAc,EAAKR,oBAvCzB,EA2CES,sBAAwB,WACS,OAA3B,EAAKR,mBACPO,cAAc,EAAKP,oBA7CzB,EAiDES,gBAAkB,WAChB,IAAMC,GAAU,IAAIf,MAAOC,cAAcC,OAAO,IAAK,GAErD,EAAKO,SAAS,CAAEV,YAAagB,KApDjC,uDAUE,WACEC,SAASC,iBAAiB,cAAeC,KAAKZ,WAC9CU,SAASC,iBAAiB,QAASC,KAAKR,WACxCQ,KAAKC,yBAbT,kCAgBE,WACEH,SAASI,oBAAoB,cAAeF,KAAKZ,WACjDU,SAASI,oBAAoB,QAASF,KAAKR,WAC3CQ,KAAKL,0BAnBT,kCAuDE,WACEK,KAAKb,kBAAoBgB,YAAYH,KAAKJ,gBAAgBQ,KAAKJ,MAAO,OAxD1E,oBA2DE,WACE,IAAQnB,EAAgBmB,KAAKpB,MAArBC,YACAwB,EAASL,KAAKM,MAAdD,KAER,OAAKL,KAAKpB,MAAMK,SAKd,sBAAKsB,UAAU,QAAf,UACE,iCAASF,IACR,IAFH,UAIG,IACAxB,KATI,QAhEb,4BAsBE,WACE,IAAM2B,EAAYC,KAAKC,MAAsB,GAAhBD,KAAKE,UAElC,MAAM,SAAN,OAAgBH,OAzBpB,GAA2BI,IAAMC,WCPpBC,EAAb,4MACElC,MAAQ,CACNmC,UAAW,WAFf,EAKE7B,kBAA2C,KAL7C,EAuBE8B,gBAAkB,WAChB,IAAMC,EAAUH,EAAII,gBACdC,EAAU,EAAKvC,MAAMmC,UAG3BK,QAAQC,KAAR,uBAA6BF,EAA7B,eAA2CF,IAE3C,EAAK1B,SAAS,CAAEwB,UAAWE,KA9B/B,uDAOE,WACEjB,KAAKd,kBAAoBiB,YAAYH,KAAKgB,gBAAiB,QAR/D,kCAWE,WACiC,OAA3BhB,KAAKd,mBACPQ,cAAcM,KAAKd,qBAbzB,oBAiCE,WACE,IAAQ6B,EAAcf,KAAKpB,MAAnBmC,UAER,OACE,sBAAKR,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,CAAOF,KAAMU,UAvCrB,4BAiBE,WACE,IAAMP,EAAYC,KAAKC,MAAsB,IAAhBD,KAAKE,UAElC,MAAM,SAAN,OAAgBH,OApBpB,GAAyBI,IAAMC,WCD/BS,IAASC,OACP,cAAC,EAAD,IACAzB,SAAS0B,eAAe,W","file":"static/js/main.310664cc.chunk.js","sourcesContent":["import React from 'react';\n\ninterface ClockProps {\n  name: string;\n}\n\ninterface ClockState {\n  currentTime: string;\n  hasClock: boolean;\n}\n\nexport class Clock extends React.Component<ClockProps, ClockState> {\n  state = {\n    currentTime: new Date().toUTCString().slice(-12, -4),\n    hasClock: true,\n  };\n\n  clockNameInterval: NodeJS.Timeout | null = null;\n\n  clockTimeInterval: NodeJS.Timeout | null = null;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n    this.startClockTimeUpdate();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n    this.stopUpdatingClockTime();\n  }\n\n  static getRandomName() {\n    const randomNum = Math.floor(Math.random() * 10);\n\n    return `Clock-${randomNum}`;\n  }\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  stopUpdatingClockName = () => {\n    if (this.clockNameInterval !== null) {\n      clearInterval(this.clockNameInterval);\n    }\n  };\n\n  stopUpdatingClockTime = () => {\n    if (this.clockTimeInterval !== null) {\n      clearInterval(this.clockTimeInterval);\n    }\n  };\n\n  updateClockTime = () => {\n    const newTime = new Date().toUTCString().slice(-12, -4);\n\n    this.setState({ currentTime: newTime });\n  };\n\n  startClockTimeUpdate() {\n    this.clockTimeInterval = setInterval(this.updateClockTime.bind(this), 1000);\n  }\n\n  render() {\n    const { currentTime } = this.state;\n    const { name } = this.props;\n\n    if (!this.state.hasClock) {\n      return null;\n    }\n\n    return (\n      <div className=\"Clock\">\n        <strong>{name}</strong>\n        {' '}\n        time is\n        {' '}\n        {currentTime}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nexport class App extends React.Component {\n  state = {\n    clockName: 'Clock-0',\n  };\n\n  clockNameInterval: NodeJS.Timeout | null = null;\n\n  componentDidMount() {\n    this.clockNameInterval = setInterval(this.updateClockName, 3300);\n  }\n\n  componentWillUnmount() {\n    if (this.clockNameInterval !== null) {\n      clearInterval(this.clockNameInterval);\n    }\n  }\n\n  static getRandomName() {\n    const randomNum = Math.floor(Math.random() * 10000);\n\n    return `Clock-${randomNum}`;\n  }\n\n  updateClockName = () => {\n    const newName = App.getRandomName();\n    const oldName = this.state.clockName;\n\n    // eslint-disable-next-line no-console\n    console.info(`Renamed from ${oldName} to ${newName}`);\n\n    this.setState({ clockName: newName });\n  };\n\n  render() {\n    const { clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <Clock name={clockName} />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}