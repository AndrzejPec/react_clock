{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","undefined","state","date","Date","this","startClockUpdate","stopClockUpdate","window","setInterval","setState","console","info","toUTCString","slice","clearInterval","clockName","props","className","React","Component","App","nameId","hasClock","handleMouseClick","event","preventDefault","handleContextMenu","startClockNameUpdate","document","addEventListener","removeEventListener","stopClockNameUpdate","newClockName","value","now","toString","getRandomName","debug","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,aAA8BC,EADhC,EAGEC,MAAQ,CACNC,KAAM,IAAIC,MAJd,uDAOE,WACEC,KAAKC,qBART,kCAWE,WACED,KAAKE,oBAZT,8BAeE,WAAoB,IAAD,OACjBF,KAAKL,QAAUQ,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEP,KAAM,IAAIC,OAE1BO,QAAQC,KAAR,UAAgB,EAAKV,MAAMC,KAAKU,cAAcC,OAAO,IAAK,OACzD,OApBP,6BAuBE,gBACuBb,IAAjBI,KAAKL,SACPQ,OAAOO,cAAcV,KAAKL,WAzBhC,oBA6BE,WACE,IAAQgB,EAAcX,KAAKY,MAAnBD,UACAb,EAASE,KAAKH,MAAdC,KAER,OACE,sBAAKe,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCF,IAChC,YACD,sBAAME,UAAU,cAAhB,SAA+Bf,EAAKU,cAAcC,OAAO,IAAK,YArCtE,GAA2BK,IAAMC,WCK1B,IAAMC,EAAb,4MACEC,YAA6BrB,EAD/B,EAGEC,MAAQ,CACNc,UAAW,UACXO,UAAU,GALd,EAoBEC,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,EAAKhB,SAAS,CAAEa,UAAU,KAtB9B,EAyBEI,kBAAoB,SAACF,GACnBA,EAAMC,iBACN,EAAKhB,SAAS,CAAEa,UAAU,KA3B9B,uDAQE,WACElB,KAAKuB,uBACLC,SAASC,iBAAiB,QAASzB,KAAKmB,kBACxCK,SAASC,iBAAiB,cAAezB,KAAKsB,qBAXlD,kCAcE,WACEE,SAASE,oBAAoB,QAAS1B,KAAKmB,kBAC3CK,SAASE,oBAAoB,cAAe1B,KAAKsB,mBACjDtB,KAAK2B,wBAjBT,kCA8BE,WAAwB,IAAD,OACrB3B,KAAKiB,OAASd,OAAOC,aAAY,WAC/B,IAAMwB,EAtCZ,WACE,IAAMC,EAAQ9B,KAAK+B,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAmCSG,GAEjB,EAAKnC,MAAMqB,WACbZ,QAAQ2B,MAAR,uBAA8B,EAAKpC,MAAMc,UAAzC,eAAyDiB,IACzDtB,QAAQC,KAAR,WAAgB,IAAIR,MAAOS,cAAcC,OAAO,IAAK,MAGvD,EAAKJ,SAAS,CAAEM,UAAWiB,MAC1B,QAxCP,iCA2CE,gBACsBhC,IAAhBI,KAAKiB,QACPd,OAAOO,cAAcV,KAAKiB,UA7ChC,oBAiDE,WACE,MAAgCjB,KAAKH,MAA7BqB,EAAR,EAAQA,SAAUP,EAAlB,EAAkBA,UAElB,OACE,sBAAKE,UAAU,MAAf,UACE,6CACCK,GAAY,cAAC,EAAD,CAAOP,UAAWA,WAvDvC,GAAyBG,IAAMC,WCb/BmB,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.12744a32.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  timerId: number | undefined = undefined;\n\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    this.startClockUpdate();\n  }\n\n  componentWillUnmount() {\n    this.stopClockUpdate();\n  }\n\n  startClockUpdate() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n\n      console.info(`${this.state.date.toUTCString().slice(-12, -4)}`);\n    }, 1000);\n  }\n\n  stopClockUpdate() {\n    if (this.timerId !== undefined) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{clockName}</strong>\n        {' time is '}\n        <span className=\"Clock__time\">{date.toUTCString().slice(-12, -4)}</span>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, State> {\n  nameId: number | undefined = undefined;\n\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    this.startClockNameUpdate();\n    document.addEventListener('click', this.handleMouseClick);\n    document.addEventListener('contextmenu', this.handleContextMenu);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleMouseClick);\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    this.stopClockNameUpdate();\n  }\n\n  handleMouseClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: true });\n  };\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  startClockNameUpdate() {\n    this.nameId = window.setInterval(() => {\n      const newClockName = getRandomName();\n\n      if (this.state.hasClock) {\n        console.debug(`Renamed from ${this.state.clockName} to ${newClockName}`);\n        console.info(`${new Date().toUTCString().slice(-12, -4)}`);\n      }\n\n      this.setState({ clockName: newClockName });\n    }, 3300);\n  }\n\n  stopClockNameUpdate() {\n    if (this.nameId !== undefined) {\n      window.clearInterval(this.nameId);\n    }\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}